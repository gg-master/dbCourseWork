-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.users
(
    id bigserial NOT NULL,
    full_name text NOT NULL,
    email character varying(128) NOT NULL,
    phone character varying(64) NOT NULL,
    birth_date date NOT NULL,
    registration_date date NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (email),
    UNIQUE (phone)
);

CREATE TABLE IF NOT EXISTS public.transportation_stop
(
    id bigserial NOT NULL,
    name character varying(256) NOT NULL,
    latitude numeric(8, 6) NOT NULL,
    longitude numeric(9, 6) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.transport_type
(
    id bigserial NOT NULL,
    name character varying(128) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.transport
(
    id bigserial NOT NULL,
    brand character varying(128) NOT NULL,
    registration_number character varying(128) NOT NULL,
    manufacturer character varying(256) NOT NULL,
    manufacturing_date date NOT NULL,
    capacity smallint NOT NULL,
    is_repaired boolean NOT NULL DEFAULT 'true',
    type_id bigint,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.routes
(
    id bigserial NOT NULL,
    name character varying(256) NOT NULL,
    price numeric(6, 2) NOT NULL,
    rating numeric(3, 1) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.transport_location
(
    id bigserial NOT NULL,
    transport_id bigint NOT NULL,
    latitude numeric(8, 6) NOT NULL,
    longitude numeric(9, 6) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.employees_positions
(
    id bigserial NOT NULL,
    name character varying(128) NOT NULL,
    description text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.transport_workers
(
    id bigserial NOT NULL,
    full_name text NOT NULL,
    phone character varying(64) NOT NULL,
    birth_date date NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (phone)
);

CREATE TABLE IF NOT EXISTS public.transport_stop_schedule
(
    id bigserial NOT NULL,
    route_schedule_id bigint NOT NULL,
    stop_id bigint NOT NULL,
    departure_time timestamp without time zone NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.custom_routes
(
    id bigserial NOT NULL,
    name character varying(256) NOT NULL,
    route_id bigint NOT NULL,
    user_id bigint NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tickets
(
    id bigserial NOT NULL,
    user_id bigint NOT NULL,
    arrival_stop_id bigint NOT NULL,
    departure_stop_id bigint NOT NULL,
    price numeric(6, 2) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.transport_workers_route_schedule
(
    transport_workers_id bigint NOT NULL,
    route_schedule_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.employees_positions_transport_workers
(
    employees_positions_id bigint NOT NULL,
    transport_workers_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.transportation_stop_transport_type
(
    transportation_stop_id bigint NOT NULL,
    transport_type_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.route_schedule
(
    id bigserial NOT NULL,
    transport_id bigint NOT NULL,
    route_id bigint NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.transport
    ADD FOREIGN KEY (type_id)
    REFERENCES public.transport_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.transport_location
    ADD FOREIGN KEY (transport_id)
    REFERENCES public.transport (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.transport_stop_schedule
    ADD FOREIGN KEY (stop_id)
    REFERENCES public.transportation_stop (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.transport_stop_schedule
    ADD FOREIGN KEY (route_schedule_id)
    REFERENCES public.route_schedule (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.custom_routes
    ADD FOREIGN KEY (route_id)
    REFERENCES public.routes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.custom_routes
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.tickets
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.tickets
    ADD FOREIGN KEY (arrival_stop_id)
    REFERENCES public.transport_stop_schedule (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.tickets
    ADD FOREIGN KEY (departure_stop_id)
    REFERENCES public.transport_stop_schedule (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.transport_workers_route_schedule
    ADD FOREIGN KEY (transport_workers_id)
    REFERENCES public.transport_workers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.transport_workers_route_schedule
    ADD FOREIGN KEY (route_schedule_id)
    REFERENCES public.route_schedule (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.employees_positions_transport_workers
    ADD FOREIGN KEY (employees_positions_id)
    REFERENCES public.employees_positions (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employees_positions_transport_workers
    ADD FOREIGN KEY (transport_workers_id)
    REFERENCES public.transport_workers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.transportation_stop_transport_type
    ADD FOREIGN KEY (transportation_stop_id)
    REFERENCES public.transportation_stop (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.transportation_stop_transport_type
    ADD FOREIGN KEY (transport_type_id)
    REFERENCES public.transport_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.route_schedule
    ADD FOREIGN KEY (route_id)
    REFERENCES public.routes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.route_schedule
    ADD FOREIGN KEY (transport_id)
    REFERENCES public.transport (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;